package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PendingStudentSubcontentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPendingStudentSubcontentAllPropertiesEquals(
        PendingStudentSubcontent expected,
        PendingStudentSubcontent actual
    ) {
        assertPendingStudentSubcontentAutoGeneratedPropertiesEquals(expected, actual);
        assertPendingStudentSubcontentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPendingStudentSubcontentAllUpdatablePropertiesEquals(
        PendingStudentSubcontent expected,
        PendingStudentSubcontent actual
    ) {
        assertPendingStudentSubcontentUpdatableFieldsEquals(expected, actual);
        assertPendingStudentSubcontentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPendingStudentSubcontentAutoGeneratedPropertiesEquals(
        PendingStudentSubcontent expected,
        PendingStudentSubcontent actual
    ) {
        assertThat(expected)
            .as("Verify PendingStudentSubcontent auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPendingStudentSubcontentUpdatableFieldsEquals(
        PendingStudentSubcontent expected,
        PendingStudentSubcontent actual
    ) {
        assertThat(expected)
            .as("Verify PendingStudentSubcontent relevant properties")
            .satisfies(e -> assertThat(e.getStudentId()).as("check studentId").isEqualTo(actual.getStudentId()))
            .satisfies(e -> assertThat(e.getSubcontentId()).as("check subcontentId").isEqualTo(actual.getSubcontentId()))
            .satisfies(e -> assertThat(e.getCurrentStatus()).as("check currentStatus").isEqualTo(actual.getCurrentStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPendingStudentSubcontentUpdatableRelationshipsEquals(
        PendingStudentSubcontent expected,
        PendingStudentSubcontent actual
    ) {
        assertThat(expected)
            .as("Verify PendingStudentSubcontent relationships")
            .satisfies(e -> assertThat(e.getSubcontent()).as("check subcontent").isEqualTo(actual.getSubcontent()))
            .satisfies(e -> assertThat(e.getStudent()).as("check student").isEqualTo(actual.getStudent()));
    }
}
